
name: sonar-scan
on:
  workflow_dispatch:

    inputs:
      module:
        description: 'Enter module name'
        required: true
      configuration:
        description: 'Configuration'
        required: true
      code_branch:
        description: 'Code_branch'
        required: true
 
jobs:
  build:
    runs-on: windows-latest

    if: ${{github.event.inputs.configuration == 'Release' || github.event.inputs.configuration == 'Debug'}}
    
      
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$((Get-Date).ToString('yyyy-MM-dd-HH-mm-ss'))"

    - name: Longfilepath
      shell: powershell
      run: |
        git config --system core.longpaths true
    - uses: actions/checkout@v1
      name: Checkout Code
      with:
        ref: ${{github.event.inputs.code_branch}}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    - name: Restore NuGet Packages for BioLife.DIS.Common.Sln
      run: nuget restore BioLife.DIS.Common/BioLife.DIS.API.sln

    - name: Restore Nuget Packages for DestroyPlasma
      id: dpnuget
      run: nuget restore DestroyPlasma/BioLife.DIS.DestroyPlasma.sln
      if: ${{github.event.inputs.module == 'DestroyPlasma'}}

    - name: Restore NuGet Packages
      run: nuget restore ${{github.event.inputs.module}}/${{github.event.inputs.module}}.sln
      if: ${{steps.dpnuget.conclusion == 'skipped'}}
 
    - name: Set up JDK 
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
    - name: Setup .NET Framework
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 4.x
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
         .\.sonar\scanner\dotnet-sonarscanner begin /k:"oneTakeda_dis-aws-poc" /o:"onetakeda" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"/d:sonar.host.url="https://sonarcloud.io" 
          dotnet build ${{github.event.inputs.module}}/${{github.event.inputs.module}}.sln /p:Configuration=${{github.event.inputs.configuration}} /p:AutoParameterizationWebConfigConnectionStrings=False /t:Rebuild
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"














- name: Unzip Sonarscanner
      shell: powershell
      run: |
        curl -o ${{ runner.temp }}/sonar-scanner-msbuild-5.5.1.42999-net46.zip https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.5.1.42999/sonar-scanner-msbuild-5.5.1.42999-net46.zip
    
    - name: Unzip Sonar Scanner
      run: |
        mkdir -p sonar-scanner-msbuild
        unzip ${{ runner.temp }}/sonar-scanner-msbuild-5.5.1.42999-net46.zip -d sonar-scanner-msbuild
      working-directory: ${{ github.workspace }}
